#!/usr/bin/env bash
#  ____ _____ ___  ____
# |  _ \_   _/ _ \/ ___|   Derek Taylor (DistroTube)
# | | | || || | | \___ \   http://www.youtube.com/c/DistroTube
# | |_| || || |_| |___) |  http://www.gitlab.com/dtos/dtos
# |____/ |_| \___/|____/
#
# NAME: DTOS
# DESC: An installation and deployment script for DT's Xmonad desktop.
# WARNING: Run this script at your own risk.
# DEPENDENCIES: gum

if [ "$(id -u)" = 0 ]; then
    echo "##################################################################"
    echo "This script MUST NOT be run as root user since it makes changes"
    echo "to the \$HOME directory of the \$USER executing this script."
    echo "The \$HOME directory of the root user is, of course, '/root'."
    echo "We don't want to mess around in there. So run this script as a"
    echo "normal user. You will be asked for a sudo password when necessary."
    echo "##################################################################"
    exit 1
fi

error() { \
    clear; printf "ERROR:\\n%s\\n" "$1" >&2; exit 1;
}

echo "##########################################################################"
echo "## Syncing the repos and installing 'gum' if not installed ##"
echo "##########################################################################"
sudo pacman --noconfirm --needed -Syu gum || error "Error syncing the repos."

welcome() { \
    gum style \
	--foreground 212 --border-foreground 212 --border double \
	--align center --width 50 --margin "1 2" --padding "2 4" \
	'This is a script that will install what 'I sarcastically call DTOS (DT\'s operating system).' 'It\'s really just an installation script for those that want to try out' 'my tiling window manager configurations and associated programs.' 'You will be asked to enter your sudo password' 'at various points during this installation,' 'so stay near the computer.' 'DT (Derek Taylor, aka DistroTube)'
}

welcome || error "User choose to exit."

speedwarning() { \
    gum style \
	--foreground 212 --border-foreground 212 --border double \
	--align center --width 50 --margin "1 2" --padding "2 4" \
	'WARNING!' 'The ParallelDownloads option is not enabled in /etc/pacman.conf.' 'This may result in slower installation speeds.' 'Are you sure you want to continue?'
    gum confirm "Installing DTOS!" --affirmative="Continue" --negative="Exit" || error "User choose to exit.
}

distrowarning() { \
    gum style \
	--foreground 212 --border-foreground 212 --border double \
	--align center --width 50 --margin "1 2" --padding "2 4" \
	'WARNING!' 'While this script works on all Arch based distros,' 'some distros choose to package certain things that we also package,' 'please look at the package list and remove conflicts manually.' 'Are you sure you want to continue?'
    gum confirm "Installing DTOS!" --affirmative="Continue" --negative="Exit" || error "User choose to exit.
}

grep -qs "#ParallelDownloads" /etc/pacman.conf && speedwarning
grep -qs "ID=arch" /etc/os-release || distrowarning

localewarning() { \
        [[ -z $LANG || -z $LC_CTYPE ]] && \
        gum style \
	--foreground 212 --border-foreground 212 --border double \
	--align center --width 50 --margin "1 2" --padding "2 4" \
	'Installing DTOS!' 'WARNING! Your locales have not been set!' 'Please check that both the LANG and LC_CTYPE variables are set to the appropriate locale in /etc/locale.conf.' '(NOTE: they should both be the same)' 'Run 'sudo locale-gen', reboot and run the script again.' 'You can reference the Arch Wiki while doing so: https://wiki.archlinux.org/title/locale'
}

localewarning

lastchance() { \
gum style \
	--foreground 212 --border-foreground 212 --border double \
	--align center --width 50 --margin "1 2" --padding "2 4" \
	'Installing DTOS!' 'WARNING! The DTOS installation script is currently in public beta testing.' 'There are almost certainly errors in it' 'therefore, it is strongly recommended that you not install this on production machines.' 'It is recommended that you try this out in either a virtual machine or on a test machine.'
    gum confirm "Are You Sure You Want To Do This?" --affirmative="Begin Installation" --negative="Exit" || { clear; exit 1; }
}

lastchance || error "User choose to exit."

addrepo() { \
    gum spin --spinner jump --title "Adding the DTOS core repository to /etc/pacman.conf" -- grep -qxF "[dtos-core-repo]" /etc/pacman.conf ||
        ( echo " "; echo "[dtos-core-repo]"; echo "SigLevel = Required DatabaseOptional"; \
        echo "Server = https://gitlab.com/dtos/\$repo/-/raw/main/\$arch") | sudo tee -a /etc/pacman.conf
}

addrepo || error "Error adding DTOS repo to /etc/pacman.conf."

addkeyserver() { \
    gum spin --spinner minidot --title "Adding keyservers to /etc/pacman.d/gnupg/gpg.conf"  -- grep -qxF "keyserver.ubuntu.com:80" /etc/pacman.d/gnupg/gpg.conf || echo "keyserver hkp://keyserver.ubuntu.com:80" | sudo tee -a /etc/pacman.d/gnupg/gpg.conf && grep -qxF "keyserver.ubuntu.com:443" /etc/pacman.d/gnupg/gpg.conf || echo "keyserver hkps://keyserver.ubuntu.com:443" | sudo tee -a /etc/pacman.d/gnupg/gpg.conf
}

addkeyserver || error "Error adding keyservers to /etc/pacman.d/gnupg/gpg.conf"

receive_key() { \
    local _pgpkey="C71486C31555B12E"
gum spin --spinner points --title "Adding PGP key $_pgpkey"  -- sudo pacman-key --recv-key $_pgpkey && sudo pacman-key --lsign-key $_pgpkey
}

receive_key || error "Error receiving PGP key $_pgpkey"

gum style \
	--foreground 212 --border-foreground 212 --border double \
	--align center --width 50 --margin "1 2" --padding "2 4" \
	'CHOOSE YOUR WINDOW MANAGER(S) ' 'Choices are: xmonad, awesome, & qtile.' 'You should choose at least one, otherwise,' 'you will not have a graphical environment.' 'If unsure, Xmonad is the recommended choice.'

while true; do
    read -p "Do you wish to install XMonad? (Yy/Nn)" yn
    case $yn in
        [Yy]* ) sudo pacman -Sy xmonad xmonad-contrib xmobar dtos-xmonad dtos-xmobar;
                break;;
        [Nn]* ) echo "You choose not to install XMonad.";
                break;;
        * ) echo "Please answer yes or no.";;
    esac
done

while true; do
read -p "Do you wish to install Awesome? (Yy/Nn)" yn
    case $yn in
        [Yy]* ) sudo pacman -Sy awesome dtos-awesome ;
                break;;
        [Nn]* ) echo "You choose not to install Awesome.";
                break;;
        * ) echo "Please answer yes or no.";;
    esac
done

while true; do
    read -p "Do you wish to install Qtile? (Yy/Nn)" yn
    case $yn in
        [Yy]* ) sudo pacman -Sy qtile dtos-qtile ;
                break;;
        [Nn]* ) echo "You choose not to install Qtile." ;
                break;;
        * ) echo "Please answer yes or no.";;
    esac
done

# Let's install each package listed in the pkglist.txt file.
sudo pacman --needed --ask 4 -Sy - < pkglist.txt || error "Failed to install required packages."

gum spin --spinner line --title "Copying DTOS configuration files from /etc/dtos into \$HOME"  -- ./DTcfg 

# Change all scripts in .local/bin to be executable.
find $HOME/.local/bin -type f -print0 | xargs -0 chmod 775

gum spin --spinner line --title "Installing Doom Emacs. This may take a few minutes."  -- ./DoomEmacs || echo "Doom Emacs Installation failed!"
gum spin --spinner line --title "Recompiling XMonad"  -- xmonad --recompile || echo "Recompiling Xmonad failed!"
gum spin --spinner dot --title "Compiling the xmonadctl script"  -- ghc -dynamic "$HOME"/.config/xmonad/xmonadctl.hs || echo "Compiling the xmonadctl script failed!"

echo "Set default user shell"
choice=$(gum choose "fish" "bash" "zsh")
sudo chsh $USER -s "/bin/$choice" && \
echo -e "$choice has been set as your default USER shell. \

# Disable the current login manager
sudo systemctl disable $(grep '/usr/s\?bin' /etc/systemd/system/display-manager.service | awk -F / '{print $NF}') || echo "Cannot disable current display manager."
# Enable sddm as login manager
sudo systemctl enable sddm
gum style \
	--foreground 212 --border-foreground 212 --border double \
	--align center --width 50 --margin "1 2" --padding "2 4" \
	'Enable sddm as login manager.'

## Make multicolor-sddm-theme the default sddm theme ##
# This is the sddm system configuration file.
[ -f "/usr/lib/sddm/sddm.conf.d/default.conf" ] && \
    sudo cp /usr/lib/sddm/sddm.conf.d/default.conf /usr/lib/sddm/sddm.conf.d/default.conf.backup && \
    sudo sed -i 's/^Current=*.*/Current=multicolor-sddm-theme/g' /usr/lib/sddm/sddm.conf.d/default.conf

# This is the sddm local configuration file.
[ -f "/etc/sddm.conf" ] && \
    sudo cp /etc/sddm.conf /etc/sddm.conf.backup && \
    sudo sed -i 's/^Current=*.*/Current=multicolor-sddm-theme/g' /etc/sddm.conf

# Create a local configuration file if it doesn't exist.
# Standard Arch Linux does not create this file by default.
[ ! -f "/etc/sddm.conf" ] && \
    sudo cp /usr/lib/sddm/sddm.conf.d/default.conf /etc/sddm.conf || echo "Default sddm system config file is not found."

# ArcoLinux B Awesome uses this config location.
[ -f "/etc/sddm.conf.d/kde_settings.conf" ] && \
    sudo cp /etc/sddm.conf.d/kde_settings.conf /etc/sddm.conf.d/kde_settings.backup && \
    sudo sed -i 's/^Current=*.*/Current=multicolor-sddm-theme/g' /etc/sddm.conf.d/kde_settings.conf

gum style \
	--foreground 212 --border-foreground 212 --border double \
	--align center --width 50 --margin "1 2" --padding "2 4" \
	'DTOS' 'has been installed!'

gum confirm "Do you want to reboot?" && reboot || echo "Welcome to the world of DTOS!"
